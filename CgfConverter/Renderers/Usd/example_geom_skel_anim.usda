#usda 1.0
(
    upAxis = "Y"
)

def Skeleton "Skel1"
(
    # by default, we expect Skeleton's to be instanceable
    instanceable = true
)
{
    rel joints = [
        </Skel1/joint1>,
        </Skel1/joint1/joint2>,
        </Skel1/joint1/joint2/joint3>,
        </Skel1/joint1/joint2/joint3/joint4>,
    ]

    uniform matrix4d[] restTransforms = [( (0, 1, 0, 0), (0, 0, 1, 0), (1, 0, 0, 0), (0, -1, 0, 1) ), ( (0, 1, 0, 0), (0, 0, 1, 0), (1, 0, 0, 0), (0, 0, 0, 1) ), ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 1, 0, 1) ), ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 1, 0, 1) )]

    def Joint "joint1"
    {
        def Joint "joint2"
        {
            def Joint "joint3"
            {
                def Joint "joint4"
                {
                }
            }
        }
    }
}

def PackedJointAnimation "SkelAnim1"
{
    rel joints = [
        </SkelAnim1/joint1>,
        </SkelAnim1/joint1/joint2>,
        </SkelAnim1/joint1/joint2/joint3>,
    ]
    float3[] translations =[(0, -1, 0), (1, 0, 0), (1, 0, 0)]
    quath[]  rotations.timeSamples = { 
        1: [(0.5, 0.5, 0.5, 0.5), (1, 0, 0, 0), (0.5, -0.5, -0.5, -0.5)],
        2: [(0.4912109375, 0.5, 0.5087890625, 0.5), (1, 0, 0, 0), (0.4912109375, -0.5, -0.5, -0.5087890625)]
    }
    half3[] scales = [(1, 1, 1), (1, 1, 1), (1, 1, 1)]
}

def Mesh "SkinnedMesh"
{
    int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
    int[] faceVertexIndices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39]

    normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0)]
    point3f[] points = [(-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, 0, 0.5), (-0.5, 0, 0.5), (-0.5, 0, 0.5), (0.5, 0, 0.5), (0.5, 1, 0.5), (-0.5, 1, 0.5), (-0.5, 1, 0.5), (0.5, 1, 0.5), (0.5, 1, -0.5), (-0.5, 1, -0.5), (-0.5, 1, -0.5), (0.5, 1, -0.5), (0.5, 0, -0.5), (-0.5, 0, -0.5), (-0.5, 0, -0.5), (0.5, 0, -0.5), (0.5, -1, -0.5), (-0.5, -1, -0.5), (-0.5, -1, -0.5), (0.5, -1, -0.5), (0.5, -1, 0.5), (-0.5, -1, 0.5), (0.5, -1, 0.5), (0.5, -1, -0.5), (0.5, 0, -0.5), (0.5, 0, 0.5), (0.5, 0, 0.5), (0.5, 0, -0.5), (0.5, 1, -0.5), (0.5, 1, 0.5), (-0.5, -1, -0.5), (-0.5, -1, 0.5), (-0.5, 0, 0.5), (-0.5, 0, -0.5), (-0.5, 0, -0.5), (-0.5, 0, 0.5), (-0.5, 1, 0.5), (-0.5, 1, -0.5)]

    float2[] primvars:Texture_uv = [(0.375, 0), (0.625, 0), (0.625, 0.125), (0.375, 0.125), (0.375, 0.125), (0.625, 0.125), (0.625, 0.25), (0.375, 0.25), (0.375, 0.25), (0.625, 0.25), (0.625, 0.5), (0.375, 0.5), (0.375, 0.5), (0.625, 0.5), (0.625, 0.625), (0.375, 0.625), (0.375, 0.625), (0.625, 0.625), (0.625, 0.75), (0.375, 0.75), (0.375, 0.75), (0.625, 0.75), (0.625, 1), (0.375, 1), (0.625, 0), (0.875, 0), (0.875, 0.125), (0.625, 0.125), (0.625, 0.125), (0.875, 0.125), (0.875, 0.25), (0.625, 0.25), (0.125, 0), (0.375, 0), (0.375, 0.125), (0.125, 0.125), (0.125, 0.125), (0.375, 0.125), (0.375, 0.25), (0.125, 0.25)] (
        interpolation = "vertex"
    )

    uniform token subdivisionScheme = "none"

    # elementSize = 3 means we are weighting 3 joints per vertex.  Even
    # though the Skeleton has only three joints, encoding jointIndices as an
    # "indexed primvar" means that we need only examine a three-element array
    # to determine all the joints weighted by this mesh, rather than forty
    int[] primvars:skel:jointIndices = [0, 1, 2]
    int[] primvars:skel:jointIndices:indices = [0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 1, 2, 0, 0, 1, 2, 0, 1, 2, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 1, 2, 0, 1, 2, 0, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 1, 2, 0] (
        elementSize = 3
        interpolation = "vertex"
    )

    float[] primvars:skel:jointWeights = [1, 0, 0, 1, 0, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0, 1, 0, 1, 0, 0] (
        elementSize = 3
        interpolation = "vertex"
    )

    # Do not need to specify primvars:skel:geomBindTransform since it is identity

    rel skel:animationSource = </SkelAnim1>
    rel skel:skeleton = </Skel1>
}